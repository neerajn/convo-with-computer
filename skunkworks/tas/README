========================================================================================
Problem statement:
Write a code to implement a concurrent server
Problem Description: You need to design and develop a client-
server program.
Server's role: is to offer the following services
1. testprime
2. nextprime
3. nextnprimes
4. getdate
5. filetestoperation
Client's role: is to consume the services offered by the server
Note: Solve this problem using processes (no threading)
Expectations:
1. The program should work
2. It should be efficient
3. It should be scalable
Usage: we run the server program first, so that the server is ready
to offer the intended services. And then when we run the client
program on a different computer it should display the list of
services available on the server.... like below (on the client box)
List of Services
1. testprime
2. nextprime
3. nextnprimes
4. getdate
5. filetestoperation
6. exit
Enter your choice:
========================================================================================
Assumptions:
1) Language: C++
2) Tools: g++ 4.8 (should run on lower version too), make, linux (Ubuntu)
3) Support multiple clients together (used select aritfact with non block io on server)
4) Very simple client to speak to the server
5) A simple binary messaging protocol
6) Basic edge case and input validation
========================================================================================
How to run:
1) To make the server
cd tas/server
make

./server 23451 

2) to make the client
cd tas/client
make

./client 127.0.0.1 23451
========================================================================================
Open items:
1) Needs some refactoring
2) Needs some hardcore tests (only simple positive and negative tests run)
3) IP and port needs validation
4) Need more input validation
========================================================================================
Known bugs:
1) client side: huge number or an invalid character pushes the client into a infinte loop.
Can be killed via a SIGSTP, SIGKILL, SIGINT.
========================================================================================

